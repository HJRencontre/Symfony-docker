version: '3.9'
services:

  # Database service
  db:
    image: mysql:5.7
    container_name: db_dockerize_symfony
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_USER: ${DB_ROOT_USER}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    networks:
      - symfony

  # phpmyadmin service for adminer
  phpmyadmin:
    image: phpmyadmin:5.2.1
    container_name: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1
    depends_on:
      - db
    networks:
      - symfony

  # Composer service
  composer:
    image: composer:2.6.5
    container_name: composer_symfony
    volumes:
      - ./app:/app
    working_dir: /app
    command: composer install
    networks:
      - symfony

  # PHP Symfony service
  php:
    build:
      context: .
      dockerfile: Dockerfile.php
      target: development
    container_name: php_symfony
    restart: always
    volumes:
      - ./app:/var/www/html
    depends_on:
      - db
      - composer
    networks:
      - symfony

  # Nginx service
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx_symfony
    volumes:
      - ./app:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    depends_on:
      - php
    networks:
      - symfony

# Networks to connect services between them
networks:
  symfony:
    driver: bridge
